>>> { INÍCIO DO MÓDULO 4 } <<<

Link da PlayList compelta:
https://youtube.com/playlist?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&si=KIFef36xL3hnuVG8

< Incorporar >
<iframe width="560" height="315" src="https://www.youtube.com/embed/videoseries?si=KIFef36xL3hnuVG8&amp;list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

Módulo 04, Apresentação.
Vídeo:
O que vamos aprender no módulo 4? - @Curso em Vídeo HTML5 + CSS3
Link:
https://www.youtube.com/watch?v=zHKHMmEG9vE&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    Tópicos desse vídeo Aula:
    00:00 - Começa aqui o módulo 4
    00:33 - Quer ver aulas antecipadas?
    00:55 - Quais serão os capítulos?
        Do 22 ao 26 totalizand 45 aulas.
    01:12 - iFrames ainda são usados?
        Sim! E é útil em alguns pontos expecíficos.
        $ Confgurações de iframe.
        $ Conteúdo no local.
        $ Navegação no Iframe.
        $ Conteúdo Estático.
        $ Incovenietes, e o por que em alguns lugares não é bom usar.
        $ Tornar Iframes seguros.
        " Encerramento do Capítulo 22 com dicas importante e valiosas sobre IFRAMEs."
    02:02 - Projeto completo que criaremos
        " Início do Capítulo 23"
        $ Criação do projeto ( Redes Sociais ) completo.  
        " Fim do Capítulo 23"
    02:36 - Vamos aprender formulários
        " Início do Capítulo 24"
    02:22 - Responsividade e Media Queries
        " Início do Capítulo 25"
    04:00 - Criando uma tela de login responsivo
    04:32 - Quantas aulas por semana?
    05:14 - Vamos começar

{   Iníco do Capítulo 22}

Módulo 04, Capítulo 22, Aula 1.
Vídeo:
O iframe ainda pode ser usado? - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=GWULnkTnapM&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=2

    Tópicos deste vídeo Aula:
    00:00 - Módulo 04, Capítulo 22, aula 01
    00:23 - iframe não serve pra nada?
    01:48 - O que significa iframe
        $ (i) de in-line = em linha, e (frame) de frame = quadro; Logo iframe = Quadro de linha.
    03:11 - A Recode muda vidas
    04:23 - Criando um novo exercício
        1- Abrimos o GitHub Desktop e abrimos o repositório no Visuas Studio Code, como já vimos fazendo nas aulas anteriores.
        2 - Criamos o exercício "ex024", e no nosso caso criamos também a pasta "Modulo-04" e colocamos este arquivo de exercício dentro da pasta.
            --- Criamos então o arquivo "iframe001.html" para começarmos a praticar.

*       VEJA o arquivo index.html com códigos completos e comentário no arquivos html´s.

    05:30 - Abrindo o exercício
        Adicionamos o código base do html.
    06:42 - Criando um link
    07:14 - Criando o primeiro iframe
    08:13 - Configurando o iframe
    08:38 - Mudando o source do iframe
    09:51 - Criando mais um iframe
    10:27 - Sites protegidos contra iframes
    10:37 - Uma reflexão importante
    11:37 - Estude pelo site, com certificado

    
Módulo 04, Capítulo 22, Aula 2.
Vídeo:
Configurando iframes - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=eAxGt3ObQ24&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=3

    "Ainda no arquivo iframe001.html"
    Iniciamos esta aula apagando o iframe com o link do Google, e criamos um <iframe> com o link para o GitHub do Professor Gustavo Guanabara.

    1- Configuramos uma mensagem de incompatibilidade para navegadores que não suportam iframes.
    EX no "index.html":
        <p>
            Nem todo navegador de Celular, tem suporte ao &lt; iframe &gt; então é por isso que usamos mensagem ou âncora de link
            
            <iframe src="https://www.cursoemvido.com" frameborder="0">
                [ Seu navegador não é compátivel com isso ] 
                Mas acesse o link para o <a href="https://www.cursoemvido.com" target="_blank">Curso em Vídeo</a>
            </iframe>
            
            (entre abertura e fechamento da tag) para avisar da incompatibilidade e para que o usuário possa acessar o site que era para estar no iframe.
        </p>

    2- Podemos configurar Altura(height) e Largura(width) do <iframe>.
*       Tamanho padrão de iframe = (300x150).

        {   Para mudar usamos as propriedade diretamente na tag}.
        Ex:
        <iframe src="www.exemplo.com" frameborder="0" width="470" height="185"></iframe>

    3- Podemos por meio da CSS, configurar a Largura e Altura de um iframe.
        $ Vale lembrar que: A configuração CSS, sobre-põe a in-line, que foi feita na <tag>.
        EX:
        <iframe src="www.exemplo.com" frameborder="0" width="500" height="500"></iframe> "in-line"
        <style>
            iframe {                      "CSS"
                width: 400px;
                height: 400px;
            }
        </style>

    4- Sobre a barra de rolagem na lateral, podemos por meio do parâmetro "scroling", alterar seu comportamento em relação ao "iframe:", e para isso usamos os seguintes valores:
            {auto} = Valor padrão, cria barra de rolagem na lateral se o conteúdo exceder o tamanho do frame.
            {yes}  = Valor para dizer que mesmo se o Conteúdo for maior que o frame, então mostra a barra.
            {no}   = Valor que não permite usar barra de rolagem mesmo que o conteúdo seja exceda o frame.
                OBS sobre {no}, em alguns dispositivos, o Google chrome permite, e em outros não, então fique sabendo que isso depende muito de navegador para navegador.
            
        + sobre:
           $ Visão geral criada por IA

            O scrolling no iframe é um atributo que permite controlar a visibilidade da barra de rolagem dentro do elemento <iframe>. 
            Os valores possíveis para o atributo são "yes", "no" ou "auto". Com "yes", a barra de rolagem é habilitada, com "no" é desabilitada, e com "auto" a barra de rolagem é exibida automaticamente quando necessário. 
            O atributo de scrolling é importante para garantir que o conteúdo dentro do iframe seja apresentado conforme o pretendido, melhorando a experiência do usuário na página. 
            O iFrame é um código em HTML que permite exibir um elemento dentro de outro. Ele é usado para incorporar documentos, vídeos e mídia interativa em uma página. 



Módulo 04, Capítulo 22, Aula 3.
Vídeo:
Conteúdo local no iframe - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=G8H5jhabq8k&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=4

    Iniciamos a aula criando o "iframe002".

    COmo vimos na aula anterior existem sites que bloqueam a exibição de conteúdos em <iframe>´s, então nesta aula é ensinado a colocar sites próprios dentro do <iframe>.
        PARA ISSO criamos um novo arquivo = "pagina001.html" para ser a página 1 de nosso site de teste no iframe.


Módulo 04, Capítulo 22, Aula 4.
Vídeo:
Navegação no iframe - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=y6CKgnBYs5E&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=5

    Iniciamos esta aula criando o arquivo "iframe03".

NEsta aula é ensinado, que é possível adcionar conteúdos de navegação dentro de iframes.

    Os links de ligação para serem exibidos dentro de um <iframe> pecisa de um parâmero chamado {target=""}, e o valor deve ser o name do "objeto/elemento" iframe em questão.
        EX:
        "<ul>
            <li><a href="pag001.html" target="frame_name">Primeira página</a></li>
            <li><a href="pag002.html" target="frame_name">Segunda Página</a></li>
            <li><a href="pag003.html" target="frame_name">Terceira página</a></li>
        </ul>"

        "<iframe class="iframe003" id="tela"  name="frame_name" src="">"
            <p>Mensagem de incompatibilidade de navegador!</p>
        "</iframe>"

    Para adcionar um conteúdo para ficar estatíco(Tipo uma capa de ínicio) para que não fique um iframe vazio assim que carregar a página, use o parâmetro "src=", e entre aspas ("") adcione o caminho do aquivo que queres exibir.
        EX:
            "<iframe class="iframe003" id="tela"  name="frame_name" src="./imagens/capa-iframe.png">"
                <p>Mensagem de incompatibilidade de navegador!</p>
            "</iframe>"
    LEMBRE:
        O foco para o parâmetro  (src="") { é assunto para próxima aula }.



Módulo 04, Capítulo 22, Aula 5.
Vídeo:
Conteúdo no iframe por código - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=8Jb75kIqUQs&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=6

    Esse exercício é um complemento do anterior; ENTÃO é necessário que se tenha resolvido o (anterior).

Como já vimos, quando criamos um <iframe> ele abre vázio na página, e somente ao clicar no link do conteúdo, então ele passa a exbir algo; Porém o que vamos aprender é a adcionar um conteúdo inicial(padrão) para o conteúdo vazio.
    PARA ISSO usamos o parâmero (src="") e entre aspas o caminho do conteúdo.
        No exemplo abaixo, no arquivo "iframe003.html" adicionamos o arquivo "pag001.html" para que seja exbido ao invés de iframe vazio.

            "<ul>
                <li><a href="pag001.html" target="frame_name">Primeira página</a></li>
                <li><a href="pag002.html" target="frame_name">Segunda Página</a></li>
                <li><a href="pag003.html" target="frame_name">Terceira página</a></li>
            </ul>"

            "<iframe name="frame_name" src="pag001.html">"
            "</iframe>"

    PODEMOS ainda usar o parâmetro "srcdoc=" que possibilita o uso de html, para que possamos editar o que vai como conteúdo para o iframe vazio.
        EX:
            "<iframe id="id_frame" name="frame_name" srcdoc="<h1>[usando HTML dentro de um parâmetro]</h1>"></iframe>"
        OBS: POdemos adicionar imagens com o uso de aspas simples.
            "<iframe id="id_frame" name="frame_name" srcdoc="<h1>[usando HTML dentro de um parâmetro]</h1>"><img src='./imagens/imagem1.png'</iframe>"

            



Módulo 04, Capítulo 22, Aula 6.
Vídeo:
Inconvenientes do iframe - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=_bYRQTnFXF8&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=7

    Quais são os problemas em usar iframe em sites HTML5? Existe algum defeito no iframe? 
    Como resolver problemas com iframe?
 Acompanhe esse vídeo até o final para responder a estas e muitas outras perguntas.

    $ Tópicos deste vídeo:
    00:00 - Módulo 04, Capítulo 22, aula 06
    00:45 - Devo desistir dos iframes?
        Não devemos nos desmotivar em usar os iframes, uma vez que eles são úteis em casos específicos; porém não podemos esquecer de que ele não são as sete maravilhas do mundo!
    01:33 - Qual é a diferença entre frame e iframe?
        A diferença básicamente é em questão de utilidade; Enquanto o <frame> não se usa mais na HTML5 tanto quanto se usava em versões anteriores. Mas existem sites que sim, usam (frames) e funcionam bem.
        
        As tags "frames" não foram eliminados da HTML5, (elas não são depreciadas "como falamos"), mas a galera tenta evitar.

        POR OUTRO LADO, os <iframes>, eles são úteis pra caramba; Por exemplo: Não teriamos vídeos do YouTube em nossa página, se não tivesse o "iframe".
            MAS nem por isso, podemos dizer que o iframe é 100%bom ou que é 100%ruim.
    02:36 - Problemas com mecanismos de busca
        Os mecanismos de busca (são BOTs que vasculham o códigos), como por exemplo o "GoogleBOts" que varrem os sites, encontram esses sites, e de acordo com a relevância desse site determinada pelos algoritimos, eles vão posicionando(ranckeando) o site.

        "
            VEJA abaixo , e na vídeo aula mais sobre o assunto.
        "


*    03:02 - Hospedagem profissional para sites
*    04:07 - Como funcionam os mecanismos de busca
    05:40 - Dificuldades de indexação de iframes
        Existem problemas que dificultam a entrada dos GoogleBOTs dentro dos "iframes", e consiga {indexar} o contéudo ali presente; Com isso pode ser que contenha problemas de ixexação no conteúdo, o tornando RUIM para algum site; POR iSSO a dica é: 
            Não monte um site inteiro com uso excessivo de iframes, ou que dentro do iframe contenha conteúdos sensíveis para seu site e que sejam altamente indexável; 
*               Quanto a isso tome muito cuidado! NÃO use conteúdos muito importantes dentro de iframes.
    06:51 - Problemas de acessibilidade
        Há pessoas com algum tipo de necessidade especial, como por exemplo o caso de pessoas com problemas visuais, que por serem cegas, usam o computador por meio de Softwares Leitors de Tela.
        
        O problema é quando os leitores de tela tentam acessar "iframes", pois eles ficam perdidos quanto a questões de interpretação.
    07:19 - Problemas de usabilidade
        Esse são problemas que o próprio navegador ou usuário têem e até se confundem; 
            Que são: "VEJA ABAIXO!"
*    07:36 - Um computador para aprender a programar
    08:32 - Problemas de navegação em sites
        1- Um exemplo bem básico é quando o usuário clica na "seta de voltar" do navegador, e com isso gera uma dúvida no navegador, em relação ao voltar, se é da página(conteúdo) principal ou se é no conteúdo do "iframe".

        2- Outro exemplo é em relação ao parâmetro target="_blank" que informa ao navegador que deve abrir a "URL" indicada em outra ABA e não na mesma do site principal; ENTÃO esse abrir em Nova Aba é a dúvida do navegador, pois há dificuldade em entender se essa nova aba é na página principal ou dentro do iframe.
    09:31 - Problemas com responsividade
        Se for em caso de algum site que não seja responsível, há uma grande chance dele ficar todo quebrado(Desfigurado) dentro do iframe. ISSO acaba por ser um problema nosso também pelo motivo que vem a seguir:
    09:56 - Problemas de segurança
        Isso se deve ao  motivo de que sites que usam iframes de terceiros, acabam abrindo "PORTAS" para outros "sites".

*       A DICA É:
        {CUIDADO PARA QUEM VOCÊ ESTÁ ABRINDO A PORTA!}

        "POR EXEMPLO:
            Se por acaso estamos usando um iframe de site de terceiro, e esse for invadido por técnicas de captura de dados(informações de usuário), então o seu site estará comprometido em fazer isso para o invasor."
*       ATENÇÃO:
            "
                Isso pode se tornar responsabilidade sua, pois você, ou o desenvolvedpor do site, podem estar deixando portas abertas para as técnicas de invasão; Como por exemplo: Crossite, Ataques XSs.
            "
    11:10 - Use, mas não abuse

            

Módulo 04, Capítulo 22, Aula 7.
Vídeo:
Tornando iframes mais seguros - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=mRhjlDN4Ezo&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=8

    Iniciamos esta aula abrindo o aqruivo do exercício 24 "ex024" e dentro da pasta "paginas-extras" criamos o arquivo "pagina004.html" e é importante que se veja os comentários no arquivo sobre a aula.

        {Criamos um exemplo simples de formulário, mas isso será tema de aulas futuras, onde iremos aprender de fato a criar formulários avançados.}

    Uma coisa que foi citado na aula anterior é a questão de que outros sites podem usar seu site, se for adcionado iframe para eles, e por meio do "iframe" permitir ataques de captura de informações de usuários; UMA dAS coisas que se pode fazer para resolver esse problema é {bloquear isso}; 
        AGORA criamos o arquivo "iframe004.html" para nele adicionarmos o formulário no "iframe" para entendermos sobre com bloquear acessos de terceiros.
    
    NOTE que ao clicarmos no botão de enviar no formulário dentro do iframe, ele envia os dados; 
        1- AGORA para bloquear, usamos a configuração por meio do parâmetro "sandbox" com o valor = "sandbox".
        $ Quando colocamos essa configuração, o iframe irá bloquear todo e qualquer acesso que outros sites que estejam dentro do Iframe possar tentar fazer; Como no exemplo o cadastro de pessoas.
        A configuração "sandbox" liga o máximo de segurança possível em relação ao iframe.
    { Quando usamos essa configuração no iframe, é como se uma proteção maior estivesse sendo adicionada a nosso site, e evitando que dados sejam capturados por ataques de captura de algum tipo de dado.}
        2- OUTRO parâmetro é o "referrerpolicy" que é a politica de referência, que tem por padrão o valor = "no-referrer-when-downgrade.", e para limitar carregamentos dentro do iframe, podemos usar o valro = "no-referrer".
OBS:
    Sites capturam dados de navegação para com base nesses dados, comece a enviar e mostrar propagandas, e ao usar o parâmetro e o valor "no-referrer" , então dizemos que tudo o que estiver carregado dentro do iframe (o conteúdo), "NÃO VAI coletar DADOS ou qualquer tipo de informação do usuário".

* MAS e se quisermos que no iframe possa ser coletado algum tipo de dado? Como no exemplo o envio dos dados de um fomulário confiável? COmo podemos desligar algumas coisas e não usar toda segurança possível?
    "COMO valor para o parâmetro" {sandbox}; POdemos usar:
        1- "allow-same-origin" Para páginas de mesma origem(servidor) que nosso site = Permitir Conteúdos de Mesma Origem.
        2- "allow-forms allow-scripts" = Permitir Formulários e Scripts "USamos assim porque geralmente formulários usa de scripts para manipular dados."
            $   OBS: PODEMOS usar mais valores configurativos, para isso entre aspas "" do sandbox, tecle Ctrl+Space e veja mais opções. 
    
    + CRIAMOS agora o arquivo "pagina005.html" para falarmos de um conteúdo um pouco mais avançado, e que vai ser alvo de nossos estudos adiante;
        VEJA que neste arquivo foi criado um "script", e fique atento as dicas sobre o script.
            Criamos o arquivo "iframe005.html" para carregar a "pagina005.html".
*   SAIBA que é muito perigoroso permitir que um site que não seja confiável, rodar(executar) scripts dentro de iframes em seu site! Pode acontecer de ser um código mailicioso e comprometer todo o seu conteúdo, site ou até mesmo sistema(servidor).
{       COMO BLOQUEAR?      }
        $ COmo ensinado acima, podemos usar o parâmero "referrerpolicy = no=referrer", e usar também o parâmetro "sandbox =sandbox"
        " Assim garantimos que tudo seja bloquado!"
        PARA permitir somente"scripts" basta usar no parâmetro {sandbox} o valor = "allow-scripts".


Módulo 04, Capítulo 22, Aula 8.
Vídeo:
Tornando iframes mais seguros - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=dzhJsc1YszU&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=9

    Os iframes são inúteis? 
    Você sabia que a maneira mais usada para adicionar vídeos, mapas e documentos a um site é usando iframes?# Acompanhe esse vídeo até o final para responder a estas e muitas outras perguntas.

    Tópicos deste vídeo:
    00:00 - Módulo 04, Capítulo 22, aula 08
#    00:49 - Existem profissionais perto de você
    01:52 - Criando um novo exercício
        1- Criamos o arquivo "iframe006.html" na pasta do exercício "ex024"
    02:25 - Adicionando um vídeo usando iframe
        2- Abrimos o site "vimeo.com", e escolhemos o =vídeo: Looking For Something =link: https://vimeo.com/265045525
            ENtão vamos na opção "&neArr; = share = compartilhar" , e no <embed> copiamos o código selecionado, ou apenas clicando no </ copy embed code>.
            $    OBS: As opções de configurações como +tamanho, +cor, +COisas especiais etc, fazem parte de um çogin de grátis ou pago.
        3- Copiado o <embed>, basta adicionar a <div> onde quiser no código html.
        "NOTE QUE"
            NO código gerado pelo [vimeo.com], vem um iframe adicionado; Isso mostra que <iframes> ainda são usados quebrando assim o paradigma de que iframe é ruim de usar.
    04:09 - Adicionando mapas usando iframe
        4- Abrimos o site do Google Maps no link: https://google.com.br/maps
            4a- Pesquisamos no exemplo, o local da Hostnet Internet.
            4b- Clicamos na opção de compartilhar e na opção de "Incorporar um mapa" copiamos o código HTML.
            $ Note que já vem num <iframe>.
    05:40 - Adicionando o Waze no site com iframe
        5- Esse é outro recurso(serviço) do Google que permite Mapas mostrando trânsitos por perto. 
            5a- link: https://www.waze.com/pt-BR/live-map/
                Vamos então na nos 9pontinhos e escolhemos a opção "Mapa ao vivo" , pesquisamos o local, que nesse exemplo é o da (Hosnet internet), clicamos em "Compartilhar" e nas opções de {copia} para este exercício; Escolhemos "Incorporar um mapa".
    06:49 - Adicionando um documentos Google com iframe
        6- Abrimos o link:  https://docs.google.com
            6a- Clicamos nas 3barrinhas e escolhemos a opção "Apresentações".
            6b- Com a apresentação pronta e aberta, vá na opção "Arquivo" e no "Compartilhar" clique em "publicar na web" então escolha a opção "Incorporar", Defina suas configurações e aperte em "Publicar".
            6c- Feito isso, copie o código de <Iframe> gerado, e cole no html.
                OBS: Podemos mudar os valores dos parâmetros, como por exemplo largura = width.
    09:08 - iframe é inútil? Olha só quem usa
    09:40 - Seja avisado quando sair vídeo novo
    10:26 - Vamos criar um projeto profissional com iframe


===    {   FIM do Capítulo 22    }      ===

<<<   {Início do Capítulo 23}       >>>


Módulo 04, Capítulo 23, aula 01
Vídeo:
Criando um projeto do zero - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=hPze5_OYqBw&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=10

    1- O projeto consiste em criar um site, que tem como imagem principal um celular; É responsível para todo tamanho de tela.

    2- OBS: Na tela do celular não é clicável.

    3- Na lateral direita da página existe um menu com link para cinco(5) redes sociais e uma HomePage(casinha) em forma de botões redondos com animação :hover e que são acessiveis com click.
        3a- Cada botão contém um ícone respectivo a rede social que o link está endereçado.

    4- Cada botão quando clicado, exibe na tela do celular o conteúdo pertinete ao seu link.
        "ATENÇÃO: Esse segredo das redes sociasi carregar rádio, será alvo da aula do projeto".
        4a- NOTE que não há nada clicável no conteúdo que carrega dentro do celular, exceto o link no final do conteúdo colocado num botão  de cor vermelha e com texto "acesse".
    
$    5- TODO esse projeto será ensinado durante este capítulo!



Módulo 04, Capítulo 23, Aula 02
Vídeo:
Vamos começar o projeto - @Curso em Vídeo HTML5 e CSS3
Link:
https://youtu.be/Rgji4o96ZhA?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    1- Comece acessando https://gustavoguanabara.github.io/ , clique em Resolva os desafios, vá na pasta "modulo-04/d-13"

    2- Baixe o "pacote-d013.zip" ; Então extraia os arquivos que são imagens e um favicon.
    
    3- Agora crie a pasta chamada "projeto-social" e dentro vai todos os arquivos da pasta "pacote-d013".

    4- VÁ no GitHub Desktop e crie um novo reposiório para subir o projeto para o GitHub:
        4a- Na opção "File" clique em "New repository"; 
        4b- Em "Name" nomeamos de "projeto social"; e a "Description" = " Projeto de Redes Sociais ";
        4c- A pasta para o salvamento é o mesmo onde estamos salvando as aulas e estudos.
        4d- O "Gitignore" = "none";
        4e- A "Licence" = "MTILicence", e clicamos em "Create New repository".
        4f- {   AGORA verifique a pasta criada e os atributos do Git dentro da pasta , pois essa é a             garantia de que o repositório LOCAL foi criado com sucesso!    }.
        4g- ENTÃO, clicamos em "Pushing repository" para publicar na internet; Assim no GitHub é criado a      pasta a qual nomeamos anteriormente (vide: "porjeto-social");
*       4h- OBS: Não se esqueça de desmarcar a opção " Keep trips codes private"
            Faça isso para não deixar o projeto "privado", e com isso não conseguir hospedar mais pra frente;
        4i- E POR FIM CLIQUE em "Publish repository" para criar o repositório no GitHub.

            {   AGUARDE um tempinho... FAÇA Login e verifique seu GitHub para ver se subiu o repostório; COM ISSO estamos prontos para COMEçAR... }

    5- Ainda no GitHub Desktop, clique em "Open in Visual Studio Code".

    6- AGORA na pasta principal do projeto, crie o arquivo "index.html", a pasta "estilos" para os arquivos CSS´s que vamos usar.
        6a- Então Mão na MAssa...

    $ OBS:  {
        "VEJA nos nos cógidos, os comentrários sobre cada elemento, configuração, etc."
    }



Módulo 04, Capítulo 23, Aula 03
Vídeo:
Criando a página inicial do projeto - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=HUnltyZ9Rxg&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=12

    1- No arquivo "index.html" da aula, começamos removendo a tag <h1> do exemplo na aula anterior, e apartir da tag <main>, que é a tag semântica para o contéudo principal.

    2- Adicionamos as <section´s> e criamos a pasta "estilos" e o arquivo 'style.css' para apartir de então começarmos a estilizar.

    3- AGORA acompanhe o vídeo aula e os comentários contidos nos arquivos para entender mais sobre o assunto.



Módulo 04, Capítulo 23, Aula 04
Vídeo:
Posicionando o conteúdo do site - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=Gx-zp0aaOto&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=13

    Essa aula começa apartir da criação do arquivo home.html.

*    LEMBRANDO: 
    "Fazer o "commit and Pushing" para o repositório remoto da aula anterior no GitHub!"

    1- Criamos um arquivo além do "index.html", e esse arquivo será a "Home" do projeto; Para isso deve ser arquivo separado, o qual será o conteúdo que vai ficar aparecendo dentro do 'Celular'.
        1a- Criamos então na mesma pasta do arquivo "index.html", o arquivo "home.html", e agora veja no arquivo, mais sobre esta aula.

        1b- Esse arquivo não possui conteúdos no <body>, mas tão somente estilos CSS, e será carregado dentro do "index.html" na tag <iframe> dentro da <section>.



Módulo 04, Capítulo 23, aula 05
Vídeo:
Criando os botões para redes sociais - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=1kOhJr4DXIg&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=14

    1- Essa aula começa apartir da adição de uma mensagem dentro do <iframe> para caso em que o navegador não é compatível. 

    2-adcionamos um link dentro da <section id="redes-sociais"> com imagens , e  cada link será um "botão" .

    {AGORA} acompanhe nos arquivos mais comentários sobre a aula.


Módulo 04, Capítulo 23, aula 06
Vídeo:
Criando as páginas de cada rede social - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=ar5UB2MxraE&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=15

    Essa aula iniciamos adicionando o link do "home.html" para <a href=""> do botão Home, e resolvendo um
 probleminha que dá quando por curiosidade clicamos nos botões que estão apenas com o "#" definidos para o "href" da âncora. Então para resolver esse problema de barras de rolagem aparecerem, adcionamos os links para todas as âncoras (<a>).
    As demais telas que serão carregadas quando clicado nos demais botões que não seja o Home, irão carregar
uma imagem em "tipo ripa" que será ensinado a fazer, em aulas próximas. PArA isso criaremos um arquivo HTML para incorporar essa imagem e torna-lá um link local, assim como o Home.

    $ AGORA acompanhe a aula para entender mais sobre o assunto.

* NÂO esquece de atualizar repositório remoto do GitHub!


Módulo 04, Capítulo 23, aula 07
Vídeo:
Personalizando as imagens do projeto - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=z30JMe5Cufs&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=16

    Nessa aula é ensinado a editar as imagens para ficarem compridas , parecendo ripas e para  poder  aplicar
dentro do iframe como vimos no exercício anterior.

    1- Então o primeiro passo é tirar print da tela do celular com o início da página da rede social, ou com a imagem que se desejar; 
        No exemplo do projeto foi tirado vários prints, (quatro prints em alguns casos e mais de quatro em outros), para formar uma imagem "comprida".

    2- Agora use o Gimp para editar as imagens, ou algum editor que se tenha mais noção do que fazer para montar a imagem única.

    3- Como exemplo inicial, selecionamos os quatro(4) prints de imagens do {instagram} e arrastamos para o "Gimp".
        OBS: Caso abra uma janela perguntado se quer manter o sistema de cores, clique em "OK", epere carregar, e faça assim para todas as imagens.

    4- Escolha o primeiro print(imagem), vá na opção "imagem", clique em "Tamanho da tela de printura".
        $DICA:
            Bom que seja 10.000 de Altura para garantir uma imagem bem comprida.
            Clique em "Redimensionar", e use a "Ferramenta de movimento" para posicionar a imagem na +Ripa+.

    5- Escolha a segunda imagem, clique nela; Vá na "Ferramena de seleção retangular" e em cima dela clique com o borão direito do mouse e escolha a opção "Seleção reangular";
        5a- Selecione a parte da imagem que quizer copiar , e tecle "Ctrl + C"; AGORA volte para a imagem comprida{Ripa} criada e cole usando "Ctrl + V" .
        5b- Então vá na "Ferramenta de movimento", em cima dela clique com botão direito do mouse e escolha "Mover" ou teclar {M}.
*       OBS: 
            {Para mover}
            "Caso não esteja conseguindo mover a imagem, então do lado esquerdo clique com o botão direito sobre a camada referente a imagem, e clique na opção {Nova camada...} ou na parte de baixo com a camada referente a imagem clique na (folhinha com sinal de + ) para criar nova camada, e assim poder mover a imagem."
            {Para redimensionar somente a imagem}
            "Escolha a camada referente a imagem e Clique na Ferramenta de Redimensionar, e em seguida clique na imagem , escolha a Largura/Altura e clique Redimensionar."

*    6- Faça o mesmo para quantos(as) prints/imagem quizer.

    7- $ Ajustando o tamanho da imagem Ripa{Comprida}.
        7a- "CASO fique sobra de área sem imagens"(sobrando);
            Dimua o zoom da página usando a Ferramenta abaixo da barra de rolagem horizontal, e diminua a porcentagem (%); Nesta aula dimuimos para (12,5%) para melhor vizualizar toda a imagem em forma de "Ripa".
        7b- AGORA use a "Ferramenta de Corte" e marque a parte que desejar; (Neste caso a parte que contém imagens) e tecle "ENTER".
    
    8- Diminuindo o tamanho da imagem.
        8a- COMO NÃO precisamos de um imagem gigantona para o projeto (Percebemos isso quando aumentamos zoom da página do Gimp), pois no projeto a tela é de {600px de Largura}, ENTÃO optamos por redimensionar a LARGURA da imagem.
        8b- FEITO o corte anterior, AGORA vá na opção "imagem" e clique em "Redimensionar imagem" e escolha a {Largura}, que no caso do projeto é de "600px".

*       OBS:
            "A Resolução ao Redimensionar a imagem, opte por deixar em 70.000 de Resolução (X) e 70.000 de Resolução (Y) para que a imagem não tenha tanta qualidade, e bem assim tornando seu carregamento mais lento."

    9- Exportanto.
        Vamos exportar essa imagem para um formato levinho, pois esses /prints/imagens podem ter formatos pesados, como é o caso do formato (.png).

        9a- ENTÃO vá na opção "Arquivo", clique em "Exportar como...".
        9b- Na janela de (Exportar imagem ) e clique em "Selecionar Tipo de arquivo (Por extensão)"; Procure por {imagem JPEG} que são os formatos (.jpg),(jpeg) e (.jpe) e clique na opção.
        9c- Nomeie o arquivo como quizer, e clique em "Exportar".
        9d- Na tela de (Exportar imagem como JPEG), deixe as configurações padrão e  clique em "Exportar".


>>> {FIM DO CAPÍTULO 23} <<<



>>> {INÍCIO DO CAPÍTULO 24} <<<

Módulo 04, Capítulo 24, aula 1
Vídeo:
Como criar formulários com HTML5 - @Curso em Vídeo HTML5 e CSS3
Link:
1- https://www.youtube.com/watch?v=Wa1Ji2t2gmc&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=17
2- https://youtu.be/Wa1Ji2t2gmc?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

*   IMPORTANTE:
    "Nessa aula estudaremos sobre formuláros, e é importante que se tenha feitos todos o exercícios, desafios e mini-projetos que foram estudados até aqui; Pois nada adianta querer aprender sobre o assunto de formulários se não tiver aprende a base de tudo." 
        Outra coisa impotante é: 
            Para início de noção JavaScript é bom que se aprenda sobre formulários, pois a linguagem JavaScript na sua essência surgiu como uma linguagem script para ser aplicado junto com HTML e CSS apesar de existir hoje inúmeras aplicações para essa linguagem de programação.
    Aprenderemos de fato o que é um formulário, que básicamente é um local onde os visitantes de um site (páginas) podem armazenar dados. Os formulários nem sempre são digitais, porém vamos aprender também sobre; De forma simples de entender podemos pegar de exemplo um formulário de papel que muitas vezes eram usados em promoções de lojas onde era necessário que o cliente colocasse seus dados para participar de uma promoção, que muitas vezes eram depositadas em urnas improvidas etc.

    Foi usado de exemplo; o site da hostnet para vermos o preenchimento de um formulário para vermos como funciona parte de um formulário. 
    $ Vale lembrar: 
    {que para abrir conta no GitHub, foi preciso também preeencher um formulário. Pois então; É assim que é básicamente o que o usuário vê como formulário.}

    POR FIM , no GitHub Desktop abrimos o Visual Studio Code; Na pasta de exercicios "Modulo-04" criamos o exercicio "ex25" e apartir do "form001.html" começamos a praticar.

*   LEIA os comentários nos arquivos ".html".



Módulo 04, Capítulo 24, aula 2
Vídeo:
Usar Label vai melhorar seus formulários - @Curso em Vídeo HTML5 e CSS3
Link:
1- https://www.youtube.com/watch?v=MqdSffM1HZc&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=18
2- https://youtu.be/MqdSffM1HZc?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    Nessa aula vamos resolver alguns dos incovenientes de um formulário, como por exemplo: Os campos
não terem ligação com seus nomes, já o de os dados não estarem indo para lugar algum será resolvido em aulas futuras, pois necessitamos de aprender outra linguagem.

*     OBS: Ainda continuamos no exercício da pasta "ex025" no arquivo "form001.html". 
    
    1- Inicialmente desligamos o campo que autocompleta textos (memorizados) recém digitados e que servem de preenchimento rápido; Para isso usamos o atributo da seguinte forma <form autocomplete="off">.

    2- PARA onde vai os dados?
        2a- Normalmente os dados vão para um linguagem de programação.
        2b- Para essa aula usaremos "PHP" que é mais popular.
            Usamos então o atributo "action" para \tribuir o arquivo ao formulário, que receberá os dados por meio de uma ação que é disparada somente quando clicarem no botão(input) contendo a submissão que é a ( type="submit).

* ATENÇÃO: Quando clicamos no botão "Enviar", o navegador responderá que o (arquivo não foi encontrado); Isso se dá pelo fato do formulário não ter as ligações devidas com o arquivo de linguagem de programção.
    "Mas uma coisa podemos ver, que é o fato de o formulário estar enviando dados.".

    3- Ligação do conteúdo externo(nesse caso o <p = Nome e sobrenome> ) com a caixa de digitação que neste caso é o (input=text).
        3a- O que sabemos é que o navegador não é inteligente o suficiente para identificar por si só, que o texto (Nome e Sobrenome) tem ligação com os campos para digitar exatamente o que o texto pede; 
            ESSA ligação deve ser feita por meio de "labels = Etiquetas" ou seja, quando por exemplo o <p Nome> tem a etiqueta para o campo de texto, então estamos informando ao navegador que eles tem um ligação entre si.
        3b- SAIBA que para{linguagem HTML e PHP} a referência ao um elemeno por meio do {name=""} é mais importante do que por {id=""}, porém para a {linguagem JavaScript} o {id=""} é mais importante.
            EM JavaScript até dá pra pegar "name", porém o "id" é quase que automático. 
            
    4- Envelopamos os textos contidos no páragrafos (<p>) com a tag <label>  e o (for="") é a identificação(ligação) do (id"") a que ele pertence.
        $ OBS: NEsse exemplo nomeamos o id com (i) para dizer que é referente a este seletor; Mas se pode usar qualquer nome de "id". "Usamos assim para que por questão de dática, possamos entender a quem o "for="" pertence, pois para o for podemos atribuir o "name=" ou "id=" e optamos por atribuir o "id".
        EX: 
        <form action="cadastro-testing.php" autocomplete="off">
            <p><label for=">inome<">Nome</label> 
                <input type="text" name="nome" id=">inome<"></p>
        </form>
            "NOTE que ao definir os parâmetros que ligam o texto a caixa de digitação, na página do formulário no navegador, quando clicamos no exto Nome, a caixa de digitar irá ficar marcanda e o indiador de digitação começará a pisca idicando a ligação está funcionando."
        $ OUTRA coisa, com essa ligação, poderemos notar que um ao passar o mouse sobre a palavra Nome, um efeito de escurecer um pousco a palavra, acontece.

*   SAIBA que: 
    " - Você está fazendo este fazendo este curso para se profissionalizar, para aprender a ser um profissional de construção de sites.
      - Não se faz formulários sem relacionar(ligar) o <label> ao seu <input>(controle, elemento), porque senão dificulta os mecânismos de buscas(os Parces de html), o navegador para saber a qual caixa está relacionada com qual label."
    
*   Qual a utilidade de ao passar o mouse sobre o texto e um efeito acontecer escurecendo e marcando a caixa?
    "O objetivo é criar uma relação entre texto e a caixa (palavra e objeto), e é útil para quando em telas de celulares que geralmente são mais estreitas e menores e dificuldade de apertar em cantos específicos se torna uma tarefa complicada; Então ao criar um <label>, criamos uma área maior de sensibilidade para a digitação do formulário. "

* OBS: Uma das primeiras coisas que o professor faz, é clicar na palavra no formulário para saber se a ligação com a caixa está feita.

    $ POR FIM, o professor digitou algo nos campos (caixas) do formulário e clicou "Enviar".
        O erro apresentado foi (O arquivo não foi encontrado), e deixou a questão para resolver nas aulas seguintes.
        ANTES:
            NOTE que os dados enviados, ficaram no campo onde se digita URL no navegador;
                "...Exercicios/Modulo-04/ex025/cadastro-testing.php?nome=ar&sobrenome=as"
        VEJA que na URL da página o arquivo php foi chamado com a interrogação(?);
        {    Essa interrogação divide a URL(que é endereço do arquivo que foi aberto, do que é parâmetros extras que foram enviados) , que no caso é: }
                "nome=ar & sobrenome=as" que foram os dados digitados nas caixas do formulário.

* PERGUNTAS que ficam para responder na próxima.
    1- E se escrever SENHAS, elas ficarão ali na URL?
    2- E se eu quiser esconder a senha (tirar os dados), para não ficar na URL, tem como?



Módulo 04, Capítulo 24, aula 4
Vídeo:
Criando caixas de texto e de senha - @Curso em Vídeo HTML5 e CSS3
Link:
1- https://www.youtube.com/watch?v=SinNyasc-zU&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=20
2- https://youtu.be/SinNyasc-zU?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    Começamos essa aula apartir da criação do arquivo "cadastro.php" para entendermos um pouco mais sobre
envios de formulários; Neste caso nos deparamos com o envio de dados para o arquivo mesmo sem nada digitado nas caixas 
de dados; Então para resolvermos isso, iremos entender um pouco mais sobre o assunto.
    
	PARA didática inserimos duas frases dentro do {arquivo PHP}, e enviamos os dados sem nada, e obrservamos que mesmo sem dado algum digitado, o envio acontece, então criamos o arquivo "fomr002.html" para aprendermos alguns atributos para melhorar esse Pequeno incongruente.

{       OBSERVAÇÃO:     }       
=   Caso seu navegador mostre um erro ao invés de mostrar a mensagem que foi digitado no arquivo PHP
então arraste o "arquivo.php" para o navegador, isso fará o navegador abrir o arquivo e mostrará a mensagem desse exemplo que foi feito para vizualizar o envio de dados ; {DICA dada por flaviana...9 nos comentários}.

        1- Aqui criamos um input de id =iusu par ter ligação com a label = iusu.
        2- Usamos parágrafo, mas pode ser <div>, porém optamos pelo <p> por ter um melhor espaçamento.
        3- Usamos o controle do tipo (password que muda as letras em bolinhas ou estrelinhas, a depender do navegador),e seu "id" é ligado ao "for" do {label}.
        4- Criamos dois botões = "submit" para enviar dados que foram digitados na caixa e "reset" que limpa o que foi digitado na caixa.
        
        LEMBRANDO: Que o metódo "get" mostra a senha digitada, no campo da URL enquanto "post" Não.

        5- Usamos o atributo "required" para determinar o envio de dados se o campo estiver preenchido e o atributo "minlength ou maxlength" para defenir o tamanho minimo ou máximo de caracteres dentro da caixa.
        6- Definimos o atributo "size" para aumentar ou diminuir o tamanho da caixa.
        7- Adicionamos o atributo "placeholder" para mostra um texto de fundo.
        8 -Desligamos o autocompletador de texto usando o atributo "automplete = off" no <form>.
            OBS: 
                Saiba que é interessante usar o autocomplete "on" no <form> e também usar o metódo no <input> pois sugere mais opções além de "on e off", Veja por exemplo: nick-name = apelido, sex = sexo, tel = telefone e nesse exemplo usamos "username = usuário e current-password = senha"
                    Use new-password para casos de gerir nova senha e current-password para senha atual.

* IMPORTANTE:
    "Leia os comentários sobre a aula nos arquivos html e php!"


Módulo 04, Capítulo 24, aula 5
Vídeo:
Elementos number, month, date e time em formulários HTML - @Curso em Vídeo HTML5 e CSS3
Link:
1- https://www.youtube.com/watch?v=7P22zubU6i8&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=21
2- https://youtu.be/7P22zubU6i8?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

*   "LEMBRE-SE de commitar e dar pushing origin da aula no GitHub Desktop".

    Nessa aula inicia com a criação do arquivo "form003.html".

    1- No arquivo (html) usamos no <form> o "method = get"; Para vermos como funciona os dados sendo exibidos na URL.

    Então usamos os atributos especiais para input do tipo número <input type =  numbre>, e são eles:
                1- min = Define o número mínimo de números mostrados na caixa.
                2- max = Define o número máximo de números msotrados na caixa.
                3- placeholder = texto de fundo na caixa.
                4- step = passo; De quanto em quanto uma nota vai mudando, e para notas de alunos é de meio em meio (0.5 + 0.5 + 1.5 etc); Com esse atributo na caixa ao clicar nas setinhas , então a nota aumenta ou diminui de 0.5 em 0.5. VEJA que o padrão é de um em um (1 em 1)!
                5- required = Para preenchimento de campo obrigatório.
                6- value = Para que o campo já venha com um número/texto preenchido.
                    LEMBRANDO que ao usar esse atributo, o "placeholder" não aparece.

                    + Controles especiais.
            Input do tipo Mês: <input type = month> = Para adicionar mês e ano.
            Input do tipo Data: <input type = date> = Para adicionar um dia, mês e ano com calendário.
            Input do tipo Hora: <input type = time> = Para adicionar a hora.

* AVISOS IMPORTANTES:
    1-"Anote tudo! pratique! É necessário sempre estar treinando a criação de formulários, pois mais cedo ou mais tarde , poderá se usar estes tipos de controles."
    2-"Caso o comportamento dos controles mudem, ou características de estilo sejam diferentes em relação as caixas; SAIBA que isto se deve aos navegadores e sistemas operacionais que não possuem os mesmos padrões."



Módulo 04, Capítulo 24, Aula 6
Vídeo:
ECompatibilidade com navegadores - @Curso em Vídeo HTML5 e CSS3
Link:
1- https://www.youtube.com/watch?v=jX7v3lFdnvg&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=22
2- https://youtu.be/jX7v3lFdnvg?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    Nessa aula vemos como se comporta os controles em diferentes navegadores.
    1- [Google Chrome Edge]
    2- [Fire Fox]
    3- [Opera]
    4- [No Celular]
    5- [No Safari(MAC com IOS)]
    
    É importante saber que nem todos os navegadores tem suporte para as caixas e configurações para os controles especiais;Como por exemplo no "safari" que agora só é disponível para {MAC com IOS} a caixa configurada para números onde o usuário digita HORA; também aceita letras e ainda envia conforme for digitado.

*    OBSERVAÇÃO: 
    "Dá pra resolver esses problemas de compatíbilidade dos controles, desenvolvendo nossos próprios controles por meio de JavaScrip, porém não é conteúdo para essas aulas."



Módulo 04, Capítulo 24, Aula 7
Vídeo:
Formulários com telefone e e-mail - @Curso em Vídeo HTML5 e CSS3
Link:
1- https://www.youtube.com/watch?v=SRMEHklQC4M&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=23
2- https://youtu.be/SRMEHklQC4M?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    O início dessa aula se dá apartir da criação do arquivo "form004.html".
        1- Aprendemos a usar duas caixas novas; São elas o (input especial para e-mail e telefone).
            1a- Sobre <input = email> não podemos exigir muito dele do "e-mail", pois é algo bem simples.
            2b- Sobre <input = tel> podemos usar alguns atributos para aceitar digitos especifico.
        
        2- Usamos no <input>" type = email" alguns atributos já ensinados nas aulas; Por
            Exemplo: {type="" name="" id="" autocomplete="email" required}

        3-  Usamos atributo  (pattern="") para o <input> do "type=tel" para limitar o campo de digitação a algo específico e adicionamos alguns valores que definem esse limite; Por    
            Exemplo: "^[0-9]{4}-[0-9]{4}$"
                3a- Aqui dizemos que a caixa aceitará quantro{4} números de 0 á 9 = [0-9]{4};
                3b- Vai ter um traço (-) entre os números.
                3c- E repete a aceitação de quatro{4} números de 0 á 9 = [0-9]{4}.
            $ Podemos ainda fazer assim: 
            Exem3lo: "^\d{4,5}-\d{4,5}$"
                3d- Assim dizemos que a caixa aceitará de quatro á cinco números = "\d{4,5}";
                3e- Vai ter o traço entre os números = "-"
                3f- E repete a aceitação de quatro á cinco números.
            $ Para números de telefone com (DDD):
            Exemplo: "^\(\d{2}\) + o código anterior";
                2g- Assim dizemos que o número aceito terá entre entre parenteses() dois números, que correspondem ao DDD da cidade.

* LEMBRE-SE
    "Teste se os códigos de (Expressões Regulares = RegEx) estão funcionando, e sempre verifique como no exemplo da aula se o ENVIO do formulário está sendo feito!"

*   PESQUISE + 
    "
        Estude mais sobre (RegEx = Regular Expression) para entender e ficar mais fácil pra você.
        SAiBA que até conseguimos usar atributo (pattern) para (input type email), e para isso;
    Pesquise por "HTML5 telefone pattern" para comseguir alguns padrões.
    "        
    $ OBSERVAÇÃO:
    "
        Nem um deles é suficiente para filtrar dados errados; Portanto usar uma linguagem de programção como PHP ou JavaScript é a melhor solução para fazer essa validação.
    "

    4- $ PARA AJUDAR o usuário:
        Podemos usar o atributo (placeholder="") para deixar um texto de fundo como exemplo.
        EX: {placeholder="(xx)xxxxx-xxxx"}
    
    5- Podemos criar um "agrupamento de campos", e para isso selecionamos todos os campos no código <emmet abreviation> envelopar com abreviatura na tag <fieldset> = "Grupo de Campos".
        VEJA que com isso, na página, os campos ficarão dentro de uma caixa com bordas.
    
    6- Adcionamos a tag <legend> que ficará como um título na parte superior da borda da caixa do <fieldset>.

*   NÃO SE ESQUEÇA DE VER os comentários no arquivo index da aula!
    



Módulo 04, Capítulo 24, Aula 8
Vídeo:
Checkbox e Radio button em HTML - @Curso em Vídeo HTML5 e CSS3
Link:
https://youtu.be/iGDHFa4znHE?list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT

    Nessa aula vamos aprender dois botões (tipos de controle) bem utilizados em HTML, que são os botões de (radios e o checkboxs).
    
    1- Criamos o arquivo "fomr005.html" e no código adicionamos dois botões que são os de Enviar, limpar;
        1a- Usamos checkboxs para que  usuário marque seus favoritos.
    
    2- Criamos o <fieldset>
*       OBS: 
        " Se ainda não sabe o que é a tag <fieldset> volte a aula anterior para entender."
            1a- Adicioamos uma <legend>
            1b- Adicionamos alguns <input>´s sobre Esportes.
            1c- "SE quizer deixar um input abaixo do outro, podemos usar a Quebra de Linha" = a tag <br>==== = (Brake Hover).

    { LEMBRE-SE de relacionar os names e ids dos inputs corretamente para não dara erros. }
        2- Envelopamos com a <label> os elementos de cada <input>, para que ao clicar por exemplo na palavra "Futebol" a caixa do checkbox fique marcada ou desmarcada; Fazemos isso porque muitas vezes o usuário de celular, que tem tela menor que PC, clica na palavra ao invés de clicar na caixinha de marcação.

        3- Criamos outra <fieldset> com <legend> = Sexo.
            3a- Adicionamos os <input>´s do tipo "radio".
            "OBS: 
                É bem comum que o aprendiz se depare com um pequeno probleminha que é:
                    Quando marca uma caixinha do tipo radio, ela não desmarca clicando novamente; Diferente do checkbox que precisa apenas estar dentro da <fieldset> para funcionar. 
            "
            {   PRA RESOLVER    }
            "
                Atribuimos o mesmo (name) aos input´s do tipo radio, para que quando marcar um o outro se estiver desmarcado; Fique marcado.
            "
        
        4- Para que uma caixinha venha já marcada use o atributo "checked" no <input>.
            "OBS: Pode ser para qualqer tipo de input!"  
            Ex: 1- <input tipo=radio checked>
                2- <input tipo=checkbox checked>

*           ATENÇÃO:  Podemos usar vários "checked" para botões do tipo "checkbox" mas não serve para botões                       tipo "radio".  

        5- Atribumos (value) aos <input>´s do tipo "radio".

        $ AGORA veja na URL do navegador os dados que são enviados:
            Note que os dados que foram marcados aparecem por exemplo da seguinte maneira:
                ".../cadastro.php?sexo=F&esfut=on&esbas=on"
            ( As opções marcadas aparecem com "on" ou com seu o "value"corresponte, como é o caso da opção do sexo feminino que foi marcada, e seu value=F).



Módulo 04, Capítulo 24, Aula 9
Vídeo:
Elementos color, range e file em HTML - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=acOURIAlB1Q&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=25

*       Última aula sobre <input´s>

    1- Criamos o arquivo "form006.html".
    2- Nesta aula usamos alguns tipos de controles; 
        São eles "color; range; file".
    3- No {type=color} podemos atribuir (value="") para dizer qual a cor inicial do botão.
    4- No {type=range} atribuimos o (value="") para determinar o número inincial; Atribuimos (min e max) para definir qual o valor minímo e máximo que esse botão alcança.
    5- No {type=file}, o usuário pode escolher de seus arquivos a imagem que deseja subir.
        $ OBS:
            No caso do (type=image), o usuário não pode subir de seus arquivos a imagem que ele quer, pois essa escolha é baseada no que o desenvolvedor pré-definiu.
*       ATENÇÃO para esse tipo de controle!
        " Este tipo de controle, que envia arquivos, não pode estar com (method=GET), o indicado é o (methd=post), porque assim os arquivos vão ser enviados."



Módulo 04, Capítulo 24, Aula 10
Vídeo:
Select, datalist e textarea em HTML - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=PFGmSEj2wIo&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=26

    Ainda falando de formulário, vamos começar a ver alguns elementos fora d tag=<input>.
    
    1- Criamos o arquivo "form005.hmtl", e antes LEMBRE-SE de "commitar e dar push nos arquivos a aula anterior!"
    2- Criamos um formulário simples, como temos feito nas aulas anteriores.
    3- Usamos a tag=<select>; que também precisa dos atributos "name e id";
        3a- Esse botão serve para mostrar uma lista.
        3b- dentro de <select>...</select>, nós usamos a tag="option", e seu atributo "value" recebe o valor que corresponderá ao elemento da lista, que será exibida ao clicar no borão <select>.
            OBS: Cada <option value=""> corresponderá a um "elemento" dessa "lista"
                Ex:  <option value="MG">Minas Gerais</option> 
    4- Podemos ainda usar a tag=<optgroup> para formar conjunto de opções para o <label>.
        Quando usamos <optgroup>; Podemos informar um "label"(elemento/atributo); 
*           NOTE que o atributo "label" é diferente da tag=<label> 
        Agora o valor definido no (atributo=label) será como um "Título" para o conjunto de opções.

        EX: 
            <select name="num" id="id-num">

                <optgroup label="Números ímpares">
                    <option value="1">Um</option>
                    <option value="3">Três</option>
                </optgroup>

                <optgroup label="Números pares">
                    <option value="2">Dois</option>
                    <option value="4">Quatro</option>
                </optgroup>

            </select>
            "
                OBS: O título para o conjunto de opções náo pode ser selecionado!
            "

    5- Podemos usar o atriburo "selected" para que a opção venha já pré-definida para aparecer primeiro.

    $ ALGO bem comum é que o usuário deseja escolher uma opção, e esta coisa não está relacionada na lista de criada; ENTÃO o usuário precisa digitar no campo a sua escolha.
        "PARA resolver isso:"
    6- Criamos um um <label + input do type=text> e também o "pulo do gato" que é a tag <datalist>.
        6a- Atribuimos o "id" da tag <datalist> que tem de ser o mesmo nome dado ao atributo (list="nome-exemplo").
        6b- OBS: Usamos o atributo "list" no <input>.
        6c- Adicionamos as tags=<option>, e seu "value" pode ser definido ou não:
            Se definido, será exibido na caixa de opções e caso contrário não será exibido junto com texto.

        "NOTE que ao passar o mouse sobre a caixa de digitar texto, irá aparecer uma setinha, e se clicar nela poderemos ver as opções."
    
    $ O bom de usar <option> com <datalist> é que o campo de opções/sugestões salva as opções digitadas pelo usuário.

*       LEMBRE-SE de usar o "method=post" para tirara a limitação nos campos e digitar textos.  

    7- Usamos a tag=<textarea> para criar um campo de digitar texto, para que o usuário possa digitar texto que preferir.
        7a-  Nessa tag , definimos alguns atributos importantes.
            /1 "name"
            /2 "id"
            /3 "cols"
            /4 "rows"
            $ LEMBRANDO que <textarea> não tem limite minímo e máximo de linhas e colunas; Na verdade "cols e rows" definem o tamanho da caixa de digitação de textos.


*       LEMBRE-SE de usar o "method=post" para tirara a limitação nos campos e digitar textos.
            /5 Podemos ainda adicionar texto entre barra da tag <textarea> para ficar como mensagem de exemplo no campo(caixa) de texto.
            Ex: 
                <textarea name="ex:" id="iex:" cols="30" rows="30">Sua mensagem aqui...</textarea> 
                "
                Apesar de não se usar muito, é algo que não fica muito legal em projetos, já que o usuário sabe que um campo para digitar algo, é uma caixa de textos.
                "

*       AGORA veja no "arquivo.html" mais comentrários sobre o assunto.



Módulo 04, Capítulo 24, Aula 11
Vídeo:
Elemento output em formulários HTML - @Curso em Vídeo HTML5 e CSS3
Link:
https://www.youtube.com/watch?v=8b6K4UQDm7w&list=PLHz_AreHm4dkcVCk2Bn_fdVQ81Fkrh6WT&index=27

    $VAMOS falar um prouquinho sobre PROGRAMAÇÃO!

    1- Criamos o arquivo "form008.html"
    2- Criamos um formulário simples com atributos 
        /action="" para o arquivo  ".php"
        /method=get
        /autocomplete=on
    3- Adicionamos os botões de "Enviar e Limpara".
    4- Adicionamos duas/2 (caixas de entrada)="input" do /type="number" com os seguintes atributos:
        /name
        /id
        /min  "Numero minímo aceito"
        /max  "Número máximo aceito"
        /required
    5- Criamos uma/1 (caixa de saída) usando a tag <output>.
        Essa caixa permite exibir resultado por meio do atributo "oninput"+/propriedade-de-programação; No caso, nesta aula, estamos usando /.innerHTML que pega os "id" dos elementos de <input> HTML e consegue manipular seu atibutos,valores e propriedades.

        "SAIBA MAIS:"
            Visão geral criada por IA

            O ./innerHTML é uma propriedade do Element que permite definir ou obter o conteúdo "HTML" de um elemento. Ele é utilizado na manipulação do DOM (Document Object Model) através do "JavaScript". 
            O /.innerHTML retorna todo o texto e o HTML de um elemento, incluindo as tags. Ele pode ser usado para inserir ou substituir um trecho de código HTML, permitindo manipular a estrutura do documento. 
            O innerHTML pode ser usado para inserir tags, textos e imagens em uma página web, mas isso pode representar um risco de segurança. Para recuperar uma cópia correta do conteúdo de nós de texto, pode-se utilizar o Node.textContent. 
            O innerHTML difere de outros métodos, como o /.innerText e o /.textContent, no retorno que fazem: 
            /.innerText: Retorna somente o texto, sem formatações ou elementos HTML. 
            /.textContent: Retorna o texto com formatações, mas sem os elementos HTML. 

    6- Criamos o arquivo "form009.html" adicionamos um formulário simples, para aplicarmos o <input> type="range".
        Como sabemos, o type="range" é um botão deslizante, que vai de (0 á 100); Mas podemos definir seu número minímo, máximo e um valor padrão na exibição, usando os atributos (min=""; max="" e value="").
            1- Para mostra o valor onde o botão deslizante está, usamos a tag <output> com seu "id" apontado para o atributo JavaScript (oninput=""), que fará a captura do elemento por meio da propriedade /.innerHTML e dizer que o elemento type = {Number} será = o resultado do valor(.value) do elemento(id) que contém os dados de entrada, que no caso é o <input>.

    7- Criamos o arquivo "form010.html"; Adcionamos o código base para formulario.
        7a- Adicionamos uma caixa de entrada dados usando <input type=number> com os atributos para aceitar valores minímo e máximo usando (min="" e max=""); Também usamos o atributo (value="") para definir um valor padrão para ser exibido.
        7b- Adicionamos uma caixa de saída de dados usando <output>, e seu "id" será usado no atributo (oninput="") do <input>.
            No "oninput" adicionamos a q/função=calcIdade() e essa função é criada dentro do <script>.

*       VEJA os comentários nos arquivos "form.html"

